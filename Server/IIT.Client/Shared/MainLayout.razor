@inherits LayoutComponentBase
@using IIT.Client.Services
@inject NavigationManager _navigationManager
@inject ApiAuthenticationProvider _apiAuth
<div class="sidebar">
    <div class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">IIT.Web</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/admin/" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/admin/batches/">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Batches
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/admin/courses/index">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/admin/students/index">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li>

        </ul>
    </div>
</div>

<div class="main">
    <div class="top-row px-4">
        <AuthorizeView>
            <Authorized>
                <b>Hello, @context.User.Identity.Name!</b>
                <MatButton @onclick="LogoutClick"
                           Label="Logout"/>
            </Authorized>
            <NotAuthorized>
                <span>You are not logged in. Error</span>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>
@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    [CascadingParameter] Task<AuthenticationState> AuthenticationState { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void LogoutClick()
    {
        await _apiAuth.Logout();
        _navigationManager.NavigateTo("/login/");
    }

    
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User;
        if (user.Identity.IsAuthenticated)
        {
            if (user.IsInRole(CoreEngine.Model.Common.AppConstants.Admin))
                _navigationManager.NavigateTo("/admin/");
        }
        else
        {
            _navigationManager.NavigateTo("/login/");
        }
    }
}
