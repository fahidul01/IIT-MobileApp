@page "/admin/students/details/{StudentId}"
@inject NavigationManager _navigationManager
@inject IMemberHandler _memberService
@inject ICourseHandler _courseService
@if (Student == null)
{
    <MatProgressBar Indeterminate="true" />
}
else
{
    <div class="card">
        <div class="card-header">
            <h4>@Student.Name</h4>
            <p>@Student.Roll</p>
        </div>
        <div class="card-body">
            @if (SemesterDatas != null && SemesterDatas.Count > 0)
            {
                foreach (var semester in SemesterDatas)
                {
                    <h5>@semester.SemesterName</h5>
                    <p>Starts @semester.StartsOn.ToShortDateString()</p>
                    <MatTable Items="semester.CourseDatas"
                              ShowPaging="false"
                              AllowSelection="true">
                        <MatTableHeader>
                            <th style="width:40%">Course Name</th>
                            <th style="width:20%">Course ID</th>
                            <th style="width:20%">Course Credit</th>
                            <th style="width:20%">Grade</th>
                            <th style="width:20%">GPA</th>
                        </MatTableHeader>
                        <MatTableRow Context="Course">
                            <td @onclick="(() => ViewCourse(Course))">@Course.Name</td>
                            <td @onclick="(() => ViewCourse(Course))">@Course.CourseId</td>
                            <td @onclick="(() =>  ViewCourse(Course))">@Course.CourseCredit</td>
                            <td @onclick="(() =>  ViewCourse(Course))">@Course.Grade</td>
                            <td @onclick="(() =>  ViewCourse(Course))">@Course.GradePoint</td>
                        </MatTableRow>
                    </MatTable>
                    <MatDivider />
                    <h6 class="text-center">Total : @semester.SemesterGPA</h6>
                }
            }
        </div>
    </div>
}
@code {
    [Parameter]
    public string StudentId { get; set; }
    DBUser Student;
    List<SemesterData> SemesterDatas;
    protected override async Task OnInitializedAsync()
    {
        Student = await _memberService.GetUser(StudentId);
        SemesterDatas = await _courseService.GetStudentResult(StudentId);
        var studentCourses = await _courseService.GetBatchCourses(Student.Batch.Id);
    }

    private void ViewCourse(CourseData course)
    {
        _navigationManager.NavigateTo("/admin/courses/details/" + course.Id);
    }
}
