@page "/login"
@layout LoginLayout
@using MatBlazor
@using System.Net.Http
@inject IMemberHandler _memberHandler
@inject IMatToaster matToaster
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider

<MatCard>
    <div class="logo">
        <a href="/" title="Blazor Boilerplate Home">
            <img src="images/iitlogo-blue.png"
                 style="width:100px;" title="IIT"
                 alt="IIT" />
        </a>
        <br />
        <h4>Log In</h4>
        Username: <b>admin</b><br /> Password: <b>pass_WORD_1234</b><br />
    </div>
    <EditForm Model="@LoginViewModel" OnValidSubmit="@SubmitLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <fieldset>
            <div class="form-group">
                <MatTextField @bind-Value="@LoginViewModel.UserName" Label="User Name" Icon="person" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-Value="@LoginViewModel.Password" Label="Password" Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
            </div>
            <div class="form-group">
                <MatCheckbox @bind-Value="@LoginViewModel.RememberMe"
                             class="filled-in chk-col-blue">Remember Me</MatCheckbox>
                <MatButton class="float-right" OnClick="@SubmitLogin" Raised="true">Login</MatButton>
            </div>
            <hr />
        </fieldset>
    </EditForm>
</MatCard>
@code{
    private LoginViewModel LoginViewModel { get; set; } = new LoginViewModel();
    protected override void OnInitialized()
    {
        base.OnInitialized();

    }
    async Task SubmitLogin()
    {
        try
        {
            var response = await _memberHandler.Login(LoginViewModel.UserName, LoginViewModel.Password);
            if (response != null)
            {
                
                _navigationManager.NavigateTo("/admin");
            }
            else
            {
                matToaster.Add(response.Message, MatToastType.Danger, "Login Attempt Failed");
            }
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.Message, MatToastType.Danger, "Login Attempt Failed");
            Console.WriteLine(ex.Message);
        }
    }
}


